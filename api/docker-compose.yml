version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: RDS
    ports:
      - "${PORT_POSTGRES}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_network
    restart: unless-stopped 

  mongo:
    image: mongo:latest
    container_name: DynamoDB
    ports:
      - "${PORT_MONGO}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mongo_data:/data/db
      - ./Docker/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - backend_network
    restart: unless-stopped 

  redis:
    image: redis:latest
    container_name: ElasticCache
    ports:
      - "${PORT_REDIS}:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend_network
    restart: unless-stopped 

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  redis_data:
