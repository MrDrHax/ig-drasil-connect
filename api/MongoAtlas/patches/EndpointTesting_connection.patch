diff --git a/api/MongoAtlas/DB_connection.py b/api/MongoAtlas/DB_connection.py
index 92b60e0..30a11ae 100644
--- a/api/MongoAtlas/DB_connection.py
+++ b/api/MongoAtlas/DB_connection.py
@@ -2,7 +2,7 @@ from pymongo import MongoClient
 from pymongo.errors import ConnectionFailure
 from config import Config
 
-#uri = 'mongodb+srv://a01783155:hfVp8BtX7R9VblzG@igdrasiltest.i4prhyj.mongodb.net/?retryWrites=true&w=majority&appName=IGDrasilTest'
+uri = 'mongodb+srv://a01783155:hfVp8BtX7R9VblzG@igdrasiltest.i4prhyj.mongodb.net/?retryWrites=true&w=majority&appName=IGDrasilTest'
 
 """
 Singleton pattern 
@@ -16,7 +16,7 @@ class DataBase:
             raise Exception("This class is a singleton!")
         try:
             #TODO Pasar el uri a .env, por lo que hay que crear una nueva
-            self.client = MongoClient(Config.URI_MONGODB, tls=True, tlsAllowInvalidCertificates=True) 
+            self.client = MongoClient(uri, tls=True, tlsAllowInvalidCertificates=True) 
             self.db = self.client["IGDrasilTest"]  # OJO: cambiarlo por el nombre de la base de datos (creo David la tiene)
         except ConnectionFailure as e:
             print(f"Error connecting to MongoDB: {e}")
diff --git a/api/MongoAtlas/DB_endpoints.py b/api/MongoAtlas/DB_endpoints.py
index fd6c20d..43edca0 100644
--- a/api/MongoAtlas/DB_endpoints.py
+++ b/api/MongoAtlas/DB_endpoints.py
@@ -31,6 +31,21 @@ router = APIRouter(
     }
 )
 
+
+#Test endpoint
+@router.get('/testdb')
+async def get_test1():
+    "Testing database endpoints connection"
+    col = db['Test1']
+    result = list(col.find())
+    
+    for item in result:
+        if '_id' in item:
+            item['_id'] = str(item['_id'])
+
+    return result
+
+
 #Example1 get from contact lens endpoint
 @router.get('/contact-analysis-segment',response_model=List[dict])
 async def get_contact_lens():
